{"ast":null,"code":"var _jsxFileName = \"/Users/chulnamgoong/Documents/front_end/slack/src/components/Chat/ChatInput.jsx\",\n  _s = $RefreshSig$();\nimport { Grid, IconButton, InputAdornment, TextField } from '@mui/material';\nimport InsertEmoticonIcon from '@mui/icons-material/InsertEmoticon';\nimport ImageIcon from '@mui/icons-material/Image';\nimport SendIcon from '@mui/icons-material/Send';\nimport React, { useCallback, useState } from 'react';\nimport '../../firebase';\nimport { getDatabase, push, ref, serverTimestamp, set } from 'firebase/database';\nimport { useSelector } from 'react-redux';\nimport { Picker } from 'emoji-mart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatInput() {\n  _s();\n  var _channel$currentChann;\n  // 채널 정보 가져오기\n  const {\n    channel,\n    user\n  } = useSelector(state => state);\n\n  //message 상태\n  const [message, setMesssage] = useState('');\n\n  //loading 상태\n  const [loading, setLoading] = useState(false);\n\n  //Emoji toggle\n  const [showEmoji, setShowEmoji] = useState(false);\n\n  //이모지\n  const handleTogglePicker = useCallback(() => {\n    setShowEmoji(show => !show);\n  }, []);\n\n  //message onChange로 저장\n  const handleChange = useCallback(e => {\n    setMesssage(e.target.value);\n  }, []);\n\n  // 메세지 생성\n  const createMessage = useCallback(() => ({\n    timestamp: serverTimestamp(),\n    user: {\n      id: user.currentUser.uid,\n      name: user.currentUser.displayName,\n      avatar: user.currentUser.photoURL\n    },\n    content: message\n  }), [message, user.currentUser.uid, user.currentUser.displayName, user.currentUser.photoURL]);\n\n  // 메시지 전송\n  const clickSendMessage = useCallback(async () => {\n    // 메세지가 없을경우 방어\n    if (!message) return;\n    setLoading(true);\n\n    // firebass realtimedatabase에 메세지 저장\n    try {\n      await set(push(ref(getDatabase(), 'messages/' + channel.currentChannel.id)), createMessage());\n      setLoading(false);\n      setMesssage('');\n    } catch (error) {\n      console.error(error);\n      setLoading(false);\n    }\n  }, [message, (_channel$currentChann = channel.currentChannel) === null || _channel$currentChann === void 0 ? void 0 : _channel$currentChann.id, createMessage]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    sx: {\n      p: '20px'\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sx: {\n        position: 'relative'\n      },\n      children: [showEmoji && /*#__PURE__*/_jsxDEV(Picker, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        InputProps: {\n          startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"start\",\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: handleTogglePicker,\n              children: /*#__PURE__*/_jsxDEV(InsertEmoticonIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              children: /*#__PURE__*/_jsxDEV(ImageIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this),\n          endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"start\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              disabled: loading,\n              onClick: clickSendMessage,\n              children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)\n        },\n        autoComplete: \"off\",\n        label: \"\\uBA54\\uC138\\uC9C0 \\uC785\\uB825\",\n        fullWidth: true,\n        value: message,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatInput, \"KtNQNijxPcTcl58+JN+kVhtclXI=\", false, function () {\n  return [useSelector];\n});\n_c = ChatInput;\nvar _c;\n$RefreshReg$(_c, \"ChatInput\");","map":{"version":3,"names":["Grid","IconButton","InputAdornment","TextField","InsertEmoticonIcon","ImageIcon","SendIcon","React","useCallback","useState","getDatabase","push","ref","serverTimestamp","set","useSelector","Picker","jsxDEV","_jsxDEV","ChatInput","_s","_channel$currentChann","channel","user","state","message","setMesssage","loading","setLoading","showEmoji","setShowEmoji","handleTogglePicker","show","handleChange","e","target","value","createMessage","timestamp","id","currentUser","uid","name","displayName","avatar","photoURL","content","clickSendMessage","currentChannel","error","console","container","sx","p","children","item","xs","position","fileName","_jsxFileName","lineNumber","columnNumber","InputProps","startAdornment","onClick","endAdornment","disabled","autoComplete","label","fullWidth","onChange","_c","$RefreshReg$"],"sources":["/Users/chulnamgoong/Documents/front_end/slack/src/components/Chat/ChatInput.jsx"],"sourcesContent":["import { Grid, IconButton, InputAdornment, TextField } from '@mui/material'\nimport InsertEmoticonIcon from '@mui/icons-material/InsertEmoticon'\nimport ImageIcon from '@mui/icons-material/Image'\nimport SendIcon from '@mui/icons-material/Send'\nimport React, { useCallback, useState } from 'react'\nimport '../../firebase'\nimport { getDatabase, push, ref, serverTimestamp, set } from 'firebase/database'\nimport { useSelector } from 'react-redux'\nimport { Picker } from 'emoji-mart'\n\nexport default function ChatInput() {\n  // 채널 정보 가져오기\n  const { channel, user } = useSelector(state => state)\n\n  //message 상태\n  const [message, setMesssage] = useState('')\n\n  //loading 상태\n  const [loading, setLoading] = useState(false)\n\n  //Emoji toggle\n  const [showEmoji, setShowEmoji] = useState(false)\n\n  //이모지\n  const handleTogglePicker = useCallback(() => {\n    setShowEmoji(show => !show)\n  }, [])\n\n  //message onChange로 저장\n  const handleChange = useCallback(e => {\n    setMesssage(e.target.value)\n  }, [])\n\n  // 메세지 생성\n  const createMessage = useCallback(\n    () => ({\n      timestamp: serverTimestamp(),\n      user: {\n        id: user.currentUser.uid,\n        name: user.currentUser.displayName,\n        avatar: user.currentUser.photoURL,\n      },\n      content: message,\n    }),\n    [\n      message,\n      user.currentUser.uid,\n      user.currentUser.displayName,\n      user.currentUser.photoURL,\n    ]\n  )\n\n  // 메시지 전송\n  const clickSendMessage = useCallback(async () => {\n    // 메세지가 없을경우 방어\n    if (!message) return\n    setLoading(true)\n\n    // firebass realtimedatabase에 메세지 저장\n    try {\n      await set(\n        push(ref(getDatabase(), 'messages/' + channel.currentChannel.id)),\n        createMessage()\n      )\n      setLoading(false)\n      setMesssage('')\n    } catch (error) {\n      console.error(error)\n      setLoading(false)\n    }\n  }, [message, channel.currentChannel?.id, createMessage])\n\n  return (\n    <Grid container sx={{ p: '20px' }}>\n      <Grid item xs={12} sx={{ position: 'relative' }}>\n        {showEmoji && <Picker />}\n        <TextField\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <IconButton onClick={handleTogglePicker}>\n                  <InsertEmoticonIcon />\n                </IconButton>\n                <IconButton>\n                  <ImageIcon />\n                </IconButton>\n              </InputAdornment>\n            ),\n            endAdornment: (\n              <InputAdornment position=\"start\">\n                <IconButton disabled={loading} onClick={clickSendMessage}>\n                  <SendIcon />\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n          autoComplete=\"off\"\n          label=\"메세지 입력\"\n          fullWidth\n          value={message}\n          onChange={handleChange}\n        />\n      </Grid>\n    </Grid>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}